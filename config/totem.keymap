//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include "keys_nb.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            layers = <0>;
        };

        BraceOpen {
            bindings = <&kp NB_LEFT_BRACE>;
            key-positions = <1 2>;
            layers = <0>;
        };

        BraceClose {
            bindings = <&kp NB_RIGHT_BRACE>;
            key-positions = <2 3>;
            layers = <0>;
        };

        BracketOpen {
            bindings = <&kp NB_LEFT_BRACKET>;
            key-positions = <1 2>;
            layers = <2>;
        };

        BracketClose {
            bindings = <&kp NB_RIGHT_BRACKET>;
            key-positions = <3 2>;
            layers = <2>;
        };

        ParentOpen {
            bindings = <&kp NB_LEFT_PARENTHESIS>;
            key-positions = <11 12>;
            layers = <0>;
        };

        ParentClose {
            bindings = <&kp NB_RIGHT_PARENTHESIS>;
            key-positions = <12 13>;
            layers = <0>;
        };

        CrocOpen {
            bindings = <&kp NB_LESS_THAN>;
            key-positions = <12 11>;
            layers = <2>;
        };

        CrocClose {
            bindings = <&kp NB_GREATER_THAN>;
            key-positions = <13 12>;
            layers = <2>;
        };

        Underscore {
            bindings = <&kp NB_UNDERSCORE>;
            key-positions = <14 25>;
            layers = <2>;
        };

        Hat {
            bindings = <&kp NB_CARET>;
            key-positions = <4 14>;
            layers = <2>;
        };

        plus {
            bindings = <&kp NB_PLUS>;
            key-positions = <3 13>;
            layers = <0>;
        };

        minus {
            bindings = <&kp NB_MINUS>;
            key-positions = <13 24>;
            layers = <0>;
        };

        Star {
            bindings = <&kp NB_STAR>;
            key-positions = <23 22>;
            layers = <0>;
        };

        Equal {
            bindings = <&kp NB_EQUAL>;
            key-positions = <24 23>;
            layers = <0>;
        };

        Tab {
            bindings = <&kp NB_PIPE>;
            key-positions = <14 25>;
            layers = <0>;
        };

        Ampersand {
            bindings = <&kp NB_AMPERSAND>;
            key-positions = <4 14>;
            layers = <0>;
        };
    };

    macros {
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LSHFT>,
                <&macro_tap>,
                <&kp G &kp I &kp F>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                &kp Q       &kp W       &kp F           &kp P        &kp B        &kp J            &kp L             &kp U               &kp Y           &tog 5
                &mt LGUI A  &mt LALT R  &mt LCTRL S     &mt LSHFT T  &kp G        &kp M            &mt LEFT_SHIFT N  &mt LEFT_CONTROL E  &mt LEFT_ALT I  &mt RGUI O
&kp LEFT_SHIFT  &kp Z       &kp X       &kp C           &kp D        &kp V        &kp K            &kp H             &kp NB_COMMA        &kp NB_DOT      &kp NB_SLASH  &kp NB_BACKSLASH
                                        &lt 6 LEFT_ALT  &lt 1 SPACE  &lt 2 TAB    &lt 3 BACKSPACE  &lt 4 ENTER       &lt 4 BACKSPACE
            >;
        };

        Misc {
            bindings = <
        &trans  &trans     &trans      &trans      &trans    &kp F7  &kp F8  &kp F9  &kp F10  &trans
        &trans  &kp ENTER  &trans      &kp ESCAPE  &trans    &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans  &trans     &kp DELETE  &kp HOME    &trans    &kp F1  &kp F2  &kp F3  &kp F12  &trans  &trans
                           &trans      &trans      &trans    &trans  &trans  &trans
            >;

            label = "L_FKEY";
        };

        Num {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "L_NUM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃   ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃   ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃   ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃   ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
        &none       &bt BT_CLR_ALL  &kp NB_N7  &kp NB_N8  &kp NB_N9    &trans  &kp KP_N7      &kp KP_N8       &kp KP_N9  &kp KP_PLUS
        &kp PERIOD  &kp COMMA       &kp NB_N4  &kp NB_N5  &kp NB_N6    &trans  &kp NB_A_RING  &kp NB_O_SLASH  &kp NB_AE  &kp KP_MINUS
&trans  &kp ENTER   &kp NB_N0       &kp NB_N1  &kp NB_N2  &kp NB_N3    &trans  &none          &kp KP_N2       &kp KP_N3  &kp KP_MULTIPLY  &trans
                                    &trans     &trans     &trans       &none   &kp KP_N0      &trans
            >;
        };

        Symbols {
            bindings = <
           &kp NB_TILDE  &kp NB_DOLLAR      &kp NB_LEFT_BRACE        &kp NB_RIGHT_BRACE        &kp NB_AT               &kp NB_PLUS        &kp NB_ASTERISK  &kp NB_PIPE       &kp NB_QUESTION      &trans
           &kp NB_COLON  &kp NB_SEMICOLON   &kp NB_LEFT_PARENTHESIS  &kp NB_RIGHT_PARENTHESIS  &kp NB_DOUBLE_QUOTES    &kp NB_MINUS       &kp NB_EQUAL     &kp NB_AMPERSAND  &kp NB_EXCLAMATION   &kp NB_PERCENT
&kp LCTRL  &kp NB_GRAVE  &kp NB_APOSTROPHE  &kp NB_LEFT_BRACKET      &kp NB_RIGHT_BRACKET      &kp NB_SQT              &kp NB_UNDERSCORE  &kp NB_HASH      &kp NB_LESS_THAN  &kp NB_GREATER_THAN  &kp NB_SLASH    &trans
                                            &trans                   &trans                    &trans                  &trans             &trans           &trans
            >;
        };

        Brightness_System {
            bindings = <
        &trans  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &none     &trans          &trans          &trans          &trans        &trans
        &trans  &trans      &kp C_STOP         &kp C_PLAY_PAUSE  &none     &kp C_MENU_ESC  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT
&trans  &trans  &trans      &kp C_PREV         &kp C_NEXT        &trans    &trans          &kp INSERT      &trans          &trans        &trans     &trans
                            &trans             &trans            &trans    &trans          &trans          &trans
            >;
        };

        Gaming {
            bindings = <
        &kp M      &kp Q  &kp X    &kp E         &kp R           &trans  &trans  &trans  &trans  &trans
        &kp LSHFT  &kp A  &kp W    &kp D         &kp F           &trans  &trans  &trans  &trans  &trans
&trans  &kp LCTRL  &kp Z  &kp S    &kp C         &kp V           &trans  &trans  &trans  &trans  &trans  &trans
                          &kp TAB  &kp NB_SPACE  &kp LEFT_ALT    &trans  &trans  &trans
            >;
        };

        FKEYS {
            bindings = <
        &trans  &kp F12  &kp F7  &kp F8  &kp F9    &bt BT_CLR    &trans        &trans        &trans        &trans
        &trans  &kp F11  &kp F4  &kp F5  &kp F6    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &kp F10  &kp F1  &kp F2  &kp F3    &trans        &trans        &trans        &trans        &trans        &trans
                         &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };
    };
};
